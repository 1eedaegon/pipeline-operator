swagger: "2.0"
info:
  title: Kubernetes
  version: v1.30.0
paths:
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines:
    get:
      description: list objects of kind Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.PipelineList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    post:
      description: create a Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    delete:
      description: delete collection of Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedPipeline
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines/{name}:
    get:
      description: read the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    put:
      description: replace the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    delete:
      description: delete a Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/ignoreStoreReadErrorWithClusterBreakingPotential-QbNkfIqj'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    patch:
      description: partially update the specified Pipeline
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Pipeline
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines/{name}/status:
    get:
      description: read status of the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    put:
      description: replace status of the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    patch:
      description: partially update status of the specified Pipeline
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Pipeline
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs:
    get:
      description: list objects of kind Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.RunList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    post:
      description: create a Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    delete:
      description: delete collection of Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedRun
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs/{name}:
    get:
      description: read the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    put:
      description: replace the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    delete:
      description: delete a Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/ignoreStoreReadErrorWithClusterBreakingPotential-QbNkfIqj'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    patch:
      description: partially update the specified Run
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Run
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs/{name}/status:
    get:
      description: read status of the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    put:
      description: replace status of the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    patch:
      description: partially update status of the specified Run
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Run
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks:
    get:
      description: list objects of kind Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.TaskList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    post:
      description: create a Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    delete:
      description: delete collection of Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedTask
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks/{name}:
    get:
      description: read the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    put:
      description: replace the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    delete:
      description: delete a Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/ignoreStoreReadErrorWithClusterBreakingPotential-QbNkfIqj'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    patch:
      description: partially update the specified Task
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Task
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks/{name}/status:
    get:
      description: read status of the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    put:
      description: replace status of the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    patch:
      description: partially update status of the specified Task
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Task
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/pipelines:
    get:
      description: list objects of kind Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1PipelineForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.PipelineList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
  /apis/pipeline.1eedaegon.github.io/v1/runs:
    get:
      description: list objects of kind Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1RunForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.RunList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
  /apis/pipeline.1eedaegon.github.io/v1/tasks:
    get:
      description: list objects of kind Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1TaskForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.TaskList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
definitions:
  io.github.1eedaegon.pipeline.v1.Pipeline:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          env:
            type: object
            additionalProperties:
              type: string
          historyLimit:
            type: object
            properties:
              amount:
                type: integer
              date:
                type: string
          inputs:
            type: array
            items:
              type: string
          outputs:
            type: array
            items:
              type: string
          resource:
            type: object
            properties:
              cpu:
                type: string
              gpu:
                type: object
                properties:
                  amount:
                    type: integer
                  type:
                    type: string
              memory:
                type: string
          runBefore:
            type: array
            items:
              type: string
          schedule:
            type: object
            properties:
              endDate:
                type: string
              scheduleDate:
                type: string
          tasks:
            type: array
            items:
              type: object
              properties:
                args:
                  type: array
                  items:
                    type: string
                command:
                  type: string
                env:
                  type: object
                  additionalProperties:
                    type: string
                image:
                  type: string
                inputs:
                  type: array
                  items:
                    type: string
                name:
                  type: string
                outputs:
                  type: array
                  items:
                    type: string
                resource:
                  type: object
                  properties:
                    cpu:
                      type: string
                    gpu:
                      type: object
                      properties:
                        amount:
                          type: integer
                        type:
                          type: string
                    memory:
                      type: string
                runBefore:
                  type: array
                  items:
                    type: string
                schedule:
                  type: object
                  properties:
                    endDate:
                      type: string
                    scheduleDate:
                      type: string
                trigger:
                  type: boolean
          trigger:
            type: boolean
          volumes:
            type: array
            items:
              type: object
              properties:
                capacity:
                  type: string
                name:
                  type: string
                storage:
                  type: string
      status:
        type: object
        properties:
          createdDate:
            type: string
            format: date-time
          lastUpdatedDate:
            type: string
            format: date-time
          runs:
            type: integer
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    x-kubernetes-selectable-fields: []
  io.github.1eedaegon.pipeline.v1.PipelineList:
    description: PipelineList is a list of Pipeline
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of pipelines. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: PipelineList
        version: v1
    x-kubernetes-selectable-fields: []
  io.github.1eedaegon.pipeline.v1.Run:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          env:
            type: object
            additionalProperties:
              type: string
          historyLimit:
            type: object
            properties:
              amount:
                type: integer
              date:
                type: string
          inputs:
            type: array
            items:
              type: string
          jobs:
            type: array
            items:
              type: object
              properties:
                args:
                  type: array
                  items:
                    type: string
                command:
                  type: string
                env:
                  type: object
                  additionalProperties:
                    type: string
                image:
                  type: string
                inputs:
                  type: array
                  items:
                    type: string
                name:
                  type: string
                namespace:
                  type: string
                outputs:
                  type: array
                  items:
                    type: string
                resource:
                  type: object
                  properties:
                    cpu:
                      type: string
                    gpu:
                      type: object
                      properties:
                        amount:
                          type: integer
                        type:
                          type: string
                    memory:
                      type: string
                runBefore:
                  type: array
                  items:
                    type: string
                schedule:
                  type: object
                  properties:
                    endDate:
                      type: string
                    scheduleDate:
                      type: string
                trigger:
                  type: string
          outputs:
            type: array
            items:
              type: string
          resource:
            type: object
            properties:
              cpu:
                type: string
              gpu:
                type: object
                properties:
                  amount:
                    type: integer
                  type:
                    type: string
              memory:
                type: string
          runBefore:
            type: array
            items:
              type: string
          schedule:
            type: object
            properties:
              endDate:
                type: string
              scheduleDate:
                type: string
          trigger:
            type: string
          volumes:
            type: array
            items:
              type: object
              properties:
                capacity:
                  type: string
                name:
                  type: string
                storage:
                  type: string
      status:
        type: object
        properties:
          JobStates:
            type: array
            items:
              type: object
              properties:
                jobName:
                  type: string
                jobState:
                  type: string
                name:
                  type: string
                reason:
                  type: string
          completed:
            type: integer
          createdDate:
            type: string
            format: date-time
          deleted:
            type: integer
          deleting:
            type: integer
          failed:
            type: integer
          initializing:
            type: integer
          lastUpdateDate:
            type: string
            format: date-time
          runState:
            type: string
          running:
            type: integer
          stopping:
            type: integer
          waiting:
            type: integer
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    x-kubernetes-selectable-fields: []
  io.github.1eedaegon.pipeline.v1.RunList:
    description: RunList is a list of Run
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of runs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: RunList
        version: v1
    x-kubernetes-selectable-fields: []
  io.github.1eedaegon.pipeline.v1.Task:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          args:
            type: array
            items:
              type: string
          command:
            type: string
          image:
            type: string
          name:
            type: string
      status:
        type: object
        properties:
          createdDate:
            type: string
            format: date-time
          jobs:
            type: integer
          lastUpdatedDate:
            type: string
            format: date-time
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    x-kubernetes-selectable-fields: []
  io.github.1eedaegon.pipeline.v1.TaskList:
    description: TaskList is a list of Task
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of tasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: TaskList
        version: v1
    x-kubernetes-selectable-fields: []
  io.k8s.apimachinery.pkg.api.resource.Quantity:
    description: |-
      Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  
      The serialization format is:
  
      ``` <quantity>        ::= <signedNumber><suffix>
  
      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  
      <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  
      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  
      <decimalSI>       ::= m | "" | k | M | G | T | P | E
  
      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  
      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber> ```
  
      No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  
      When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  
      Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  
      - No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.
  
      The sign will be omitted unless the number is negative.
  
      Examples:
  
      - 1.5 will be serialized as "1500m" - 1.5Gi will be serialized as "1536Mi"
  
      Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  
      Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  
      This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
    type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup:
    description: APIGroup contains the name, the supported versions, and the preferred version of a group.
    type: object
    required:
      - name
      - versions
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: name is the name of the group.
        type: string
      preferredVersion:
        description: preferredVersion is the version preferred by the API server, which probably is the storage version.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'
      serverAddressByClientCIDRs:
        description: 'a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.'
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR'
        x-kubernetes-list-type: atomic
      versions:
        description: versions are the versions supported in this group.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery'
        x-kubernetes-list-type: atomic
    x-kubernetes-group-version-kind:
      - group: ""
        kind: APIGroup
        version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList:
    description: APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
    type: object
    required:
      - groups
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      groups:
        description: groups is a list of APIGroup.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup'
        x-kubernetes-list-type: atomic
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
    x-kubernetes-group-version-kind:
      - group: ""
        kind: APIGroupList
        version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.APIResource:
    description: APIResource specifies the name of a resource and whether it is namespaced.
    type: object
    required:
      - name
      - singularName
      - namespaced
      - kind
      - verbs
    properties:
      categories:
        description: categories is a list of the grouped resources this resource belongs to (e.g. 'all')
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
      group:
        description: 'group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale".'
        type: string
      kind:
        description: kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
        type: string
      name:
        description: name is the plural name of the resource.
        type: string
      namespaced:
        description: namespaced indicates if a resource is namespaced or not.
        type: boolean
      shortNames:
        description: shortNames is a list of suggested short names of the resource.
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
      singularName:
        description: singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
        type: string
      storageVersionHash:
        description: The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.
        type: string
      verbs:
        description: verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
        type: array
        items:
          type: string
      version:
        description: 'version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource''s group)".'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList:
    description: APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.
    type: object
    required:
      - groupVersion
      - resources
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      groupVersion:
        description: groupVersion is the group and version this APIResourceList is for.
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      resources:
        description: resources contains the name of the resources and if they are namespaced.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource'
        x-kubernetes-list-type: atomic
    x-kubernetes-group-version-kind:
      - group: ""
        kind: APIResourceList
        version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions:
    description: APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.
    type: object
    required:
      - versions
      - serverAddressByClientCIDRs
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      serverAddressByClientCIDRs:
        description: 'a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.'
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR'
        x-kubernetes-list-type: atomic
      versions:
        description: versions are the api versions that are available.
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
    x-kubernetes-group-version-kind:
      - group: ""
        kind: APIVersions
        version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.Condition:
    description: Condition contains details for one aspect of the current state of this API Resource.
    type: object
    required:
      - type
      - status
      - lastTransitionTime
      - reason
      - message
    properties:
      lastTransitionTime:
        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      message:
        description: message is a human readable message indicating details about the transition. This may be an empty string.
        type: string
      observedGeneration:
        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
        type: integer
        format: int64
      reason:
        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
        type: string
      status:
        description: status of the condition, one of True, False, Unknown.
        type: string
      type:
        description: type of condition in CamelCase or in foo.example.com/CamelCase.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions:
    description: DeleteOptions may be provided when deleting an API object.
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      dryRun:
        description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
      gracePeriodSeconds:
        description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
        type: integer
        format: int64
      ignoreStoreReadErrorWithClusterBreakingPotential:
        description: 'if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it'
        type: boolean
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      orphanDependents:
        description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
        type: boolean
      preconditions:
        description: Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions'
      propagationPolicy:
        description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
        type: string
    x-kubernetes-group-version-kind:
      - group: ""
        kind: DeleteOptions
        version: v1
      - group: admission.k8s.io
        kind: DeleteOptions
        version: v1
      - group: admission.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: admissionregistration.k8s.io
        kind: DeleteOptions
        version: v1
      - group: admissionregistration.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: admissionregistration.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: apiextensions.k8s.io
        kind: DeleteOptions
        version: v1
      - group: apiextensions.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: apiregistration.k8s.io
        kind: DeleteOptions
        version: v1
      - group: apiregistration.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: apps
        kind: DeleteOptions
        version: v1
      - group: apps
        kind: DeleteOptions
        version: v1beta1
      - group: apps
        kind: DeleteOptions
        version: v1beta2
      - group: authentication.k8s.io
        kind: DeleteOptions
        version: v1
      - group: authentication.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: authentication.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: authorization.k8s.io
        kind: DeleteOptions
        version: v1
      - group: authorization.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: autoscaling
        kind: DeleteOptions
        version: v1
      - group: autoscaling
        kind: DeleteOptions
        version: v2
      - group: autoscaling
        kind: DeleteOptions
        version: v2beta1
      - group: autoscaling
        kind: DeleteOptions
        version: v2beta2
      - group: batch
        kind: DeleteOptions
        version: v1
      - group: batch
        kind: DeleteOptions
        version: v1beta1
      - group: certificates.k8s.io
        kind: DeleteOptions
        version: v1
      - group: certificates.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: certificates.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: coordination.k8s.io
        kind: DeleteOptions
        version: v1
      - group: coordination.k8s.io
        kind: DeleteOptions
        version: v1alpha2
      - group: coordination.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: discovery.k8s.io
        kind: DeleteOptions
        version: v1
      - group: discovery.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: events.k8s.io
        kind: DeleteOptions
        version: v1
      - group: events.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: extensions
        kind: DeleteOptions
        version: v1beta1
      - group: flowcontrol.apiserver.k8s.io
        kind: DeleteOptions
        version: v1
      - group: flowcontrol.apiserver.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: flowcontrol.apiserver.k8s.io
        kind: DeleteOptions
        version: v1beta2
      - group: flowcontrol.apiserver.k8s.io
        kind: DeleteOptions
        version: v1beta3
      - group: imagepolicy.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: internal.apiserver.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: networking.k8s.io
        kind: DeleteOptions
        version: v1
      - group: networking.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: networking.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: node.k8s.io
        kind: DeleteOptions
        version: v1
      - group: node.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: node.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: policy
        kind: DeleteOptions
        version: v1
      - group: policy
        kind: DeleteOptions
        version: v1beta1
      - group: rbac.authorization.k8s.io
        kind: DeleteOptions
        version: v1
      - group: rbac.authorization.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: rbac.authorization.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: resource.k8s.io
        kind: DeleteOptions
        version: v1alpha3
      - group: resource.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: scheduling.k8s.io
        kind: DeleteOptions
        version: v1
      - group: scheduling.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: scheduling.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: storage.k8s.io
        kind: DeleteOptions
        version: v1
      - group: storage.k8s.io
        kind: DeleteOptions
        version: v1alpha1
      - group: storage.k8s.io
        kind: DeleteOptions
        version: v1beta1
      - group: storagemigration.k8s.io
        kind: DeleteOptions
        version: v1alpha1
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldSelectorRequirement:
    description: FieldSelectorRequirement is a selector that contains values, a key, and an operator that relates the key and values.
    type: object
    required:
      - key
      - operator
    properties:
      key:
        description: key is the field selector key that the requirement applies to.
        type: string
      operator:
        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. The list of operators may grow in the future.
        type: string
      values:
        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
    description: |-
      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.
  
      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.
  
      The exact format is defined in sigs.k8s.io/structured-merge-diff
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery:
    description: GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.
    type: object
    required:
      - groupVersion
      - version
    properties:
      groupVersion:
        description: groupVersion specifies the API group and version in the form "group/version"
        type: string
      version:
        description: version specifies the version in the form of "version". This is to save the clients the trouble of splitting the GroupVersion.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector:
    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
    type: object
    properties:
      matchExpressions:
        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement'
        x-kubernetes-list-type: atomic
      matchLabels:
        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
        type: object
        additionalProperties:
          type: string
    x-kubernetes-map-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:
    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
    type: object
    required:
      - key
      - operator
    properties:
      key:
        description: key is the label key that the selector applies to.
        type: string
      operator:
        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
        type: string
      values:
        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
        type: array
        items:
          type: string
        x-kubernetes-list-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta:
    description: ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    type: object
    properties:
      continue:
        description: continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
        type: string
      remainingItemCount:
        description: remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
        type: integer
        format: int64
      resourceVersion:
        description: 'String that identifies the server''s internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
    type: object
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        description: FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1'
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
        type: string
      time:
        description: Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
  io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime:
    description: MicroTime is version of Time with microsecond level precision.
    type: string
    format: date-time
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
    description: ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
    type: object
    properties:
      annotations:
        description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations'
        type: object
        additionalProperties:
          type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
  
          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
        type: integer
        format: int64
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
  
          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
      finalizers:
        description: Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
        type: array
        items:
          type: string
        x-kubernetes-list-type: set
        x-kubernetes-patch-strategy: merge
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
  
          If this field is specified and the generated name exists, the server will return a 409.
  
          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
        type: integer
        format: int64
      labels:
        description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels'
        type: object
        additionalProperties:
          type: string
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'
        x-kubernetes-list-type: atomic
      name:
        description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
  
          Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference'
        x-kubernetes-list-map-keys:
          - uid
        x-kubernetes-list-type: map
        x-kubernetes-patch-merge-key: uid
        x-kubernetes-patch-strategy: merge
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
  
          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.'
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
  
          Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
    description: OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
    type: object
    required:
      - apiVersion
      - kind
      - name
      - uid
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
        type: string
      uid:
        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
        type: string
    x-kubernetes-map-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.Patch:
    description: Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions:
    description: Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
    type: object
    properties:
      resourceVersion:
        description: Specifies the target ResourceVersion
        type: string
      uid:
        description: Specifies the target UID.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR:
    description: ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
    type: object
    required:
      - clientCIDR
      - serverAddress
    properties:
      clientCIDR:
        description: The CIDR with which clients can match their IP to figure out the server address that they should use.
        type: string
      serverAddress:
        description: Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.Status:
    description: Status is a return value for calls that don't return other objects.
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      code:
        description: Suggested HTTP return code for this status, 0 if not set.
        type: integer
        format: int32
      details:
        description: Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails'
        x-kubernetes-list-type: atomic
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      message:
        description: A human-readable description of the status of this operation.
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
      reason:
        description: A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
        type: string
      status:
        description: 'Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
        type: string
    x-kubernetes-group-version-kind:
      - group: ""
        kind: Status
        version: v1
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause:
    description: StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
    type: object
    properties:
      field:
        description: |-
          The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
  
          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
        type: string
      message:
        description: A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
        type: string
      reason:
        description: A machine-readable description of the cause of the error. If this value is empty there is no information available.
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails:
    description: StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
    type: object
    properties:
      causes:
        description: The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
        type: array
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause'
        x-kubernetes-list-type: atomic
      group:
        description: The group attribute of the resource associated with the status StatusReason.
        type: string
      kind:
        description: 'The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        description: The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
        type: string
      retryAfterSeconds:
        description: If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
        type: integer
        format: int32
      uid:
        description: 'UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
        type: string
  io.k8s.apimachinery.pkg.apis.meta.v1.Time:
    description: Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
    type: string
    format: date-time
  io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent:
    description: Event represents a single event to a watched resource.
    type: object
    required:
      - type
      - object
    properties:
      object:
        description: |-
          Object is:
           * If Type is Added or Modified: the new state of the object.
           * If Type is Deleted: the state of the object immediately before deletion.
           * If Type is Error: *Status is recommended; other types may make sense
             depending on context.
        $ref: '#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension'
      type:
        type: string
    x-kubernetes-group-version-kind:
      - group: ""
        kind: WatchEvent
        version: v1
      - group: admission.k8s.io
        kind: WatchEvent
        version: v1
      - group: admission.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: admissionregistration.k8s.io
        kind: WatchEvent
        version: v1
      - group: admissionregistration.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: admissionregistration.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: apiextensions.k8s.io
        kind: WatchEvent
        version: v1
      - group: apiextensions.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: apiregistration.k8s.io
        kind: WatchEvent
        version: v1
      - group: apiregistration.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: apps
        kind: WatchEvent
        version: v1
      - group: apps
        kind: WatchEvent
        version: v1beta1
      - group: apps
        kind: WatchEvent
        version: v1beta2
      - group: authentication.k8s.io
        kind: WatchEvent
        version: v1
      - group: authentication.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: authentication.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: authorization.k8s.io
        kind: WatchEvent
        version: v1
      - group: authorization.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: autoscaling
        kind: WatchEvent
        version: v1
      - group: autoscaling
        kind: WatchEvent
        version: v2
      - group: autoscaling
        kind: WatchEvent
        version: v2beta1
      - group: autoscaling
        kind: WatchEvent
        version: v2beta2
      - group: batch
        kind: WatchEvent
        version: v1
      - group: batch
        kind: WatchEvent
        version: v1beta1
      - group: certificates.k8s.io
        kind: WatchEvent
        version: v1
      - group: certificates.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: certificates.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: coordination.k8s.io
        kind: WatchEvent
        version: v1
      - group: coordination.k8s.io
        kind: WatchEvent
        version: v1alpha2
      - group: coordination.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: discovery.k8s.io
        kind: WatchEvent
        version: v1
      - group: discovery.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: events.k8s.io
        kind: WatchEvent
        version: v1
      - group: events.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: extensions
        kind: WatchEvent
        version: v1beta1
      - group: flowcontrol.apiserver.k8s.io
        kind: WatchEvent
        version: v1
      - group: flowcontrol.apiserver.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: flowcontrol.apiserver.k8s.io
        kind: WatchEvent
        version: v1beta2
      - group: flowcontrol.apiserver.k8s.io
        kind: WatchEvent
        version: v1beta3
      - group: imagepolicy.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: internal.apiserver.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: networking.k8s.io
        kind: WatchEvent
        version: v1
      - group: networking.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: networking.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: node.k8s.io
        kind: WatchEvent
        version: v1
      - group: node.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: node.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: policy
        kind: WatchEvent
        version: v1
      - group: policy
        kind: WatchEvent
        version: v1beta1
      - group: rbac.authorization.k8s.io
        kind: WatchEvent
        version: v1
      - group: rbac.authorization.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: rbac.authorization.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: resource.k8s.io
        kind: WatchEvent
        version: v1alpha3
      - group: resource.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: scheduling.k8s.io
        kind: WatchEvent
        version: v1
      - group: scheduling.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: scheduling.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: storage.k8s.io
        kind: WatchEvent
        version: v1
      - group: storage.k8s.io
        kind: WatchEvent
        version: v1alpha1
      - group: storage.k8s.io
        kind: WatchEvent
        version: v1beta1
      - group: storagemigration.k8s.io
        kind: WatchEvent
        version: v1alpha1
  io.k8s.apimachinery.pkg.runtime.RawExtension:
    description: |-
      RawExtension is used to hold extensions in external versions.
  
      To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.
  
      // Internal package:
  
      	type MyAPIObject struct {
      		runtime.TypeMeta `json:",inline"`
      		MyPlugin runtime.Object `json:"myPlugin"`
      	}
  
      	type PluginA struct {
      		AOption string `json:"aOption"`
      	}
  
      // External package:
  
      	type MyAPIObject struct {
      		runtime.TypeMeta `json:",inline"`
      		MyPlugin runtime.RawExtension `json:"myPlugin"`
      	}
  
      	type PluginA struct {
      		AOption string `json:"aOption"`
      	}
  
      // On the wire, the JSON will look something like this:
  
      	{
      		"kind":"MyAPIObject",
      		"apiVersion":"v1",
      		"myPlugin": {
      			"kind":"PluginA",
      			"aOption":"foo",
      		},
      	}
  
      So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)
    type: object
  io.k8s.apimachinery.pkg.util.intstr.IntOrString:
    description: IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
    type: string
    format: int-or-string
  io.k8s.apimachinery.pkg.version.Info:
    description: Info contains versioning information. how we'll want to distribute that information.
    type: object
    required:
      - major
      - minor
      - gitVersion
      - gitCommit
      - gitTreeState
      - buildDate
      - goVersion
      - compiler
      - platform
    properties:
      buildDate:
        type: string
      compiler:
        type: string
      gitCommit:
        type: string
      gitTreeState:
        type: string
      gitVersion:
        type: string
      goVersion:
        type: string
      major:
        type: string
      minor:
        type: string
      platform:
        type: string
parameters:
  allowWatchBookmarks-HC2hJt-J:
    uniqueItems: true
    type: boolean
    description: allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.
    name: allowWatchBookmarks
    in: query
  body-2Y1dVQaQ:
    name: body
    in: body
    schema:
      $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions'
  body-78PwaGsr:
    name: body
    in: body
    required: true
    schema:
      $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch'
  command-Py3eQybp:
    uniqueItems: true
    type: string
    description: Command is the remote command to execute. argv array. Not executed within a shell.
    name: command
    in: query
  container-1GeXxFDC:
    uniqueItems: true
    type: string
    description: The container for which to stream logs. Defaults to only container if there is one container in the pod.
    name: container
    in: query
  container-_Q-EJ3nR:
    uniqueItems: true
    type: string
    description: The container in which to execute the command. Defaults to only container if there is only one container in the pod.
    name: container
    in: query
  container-i5dOmRiM:
    uniqueItems: true
    type: string
    description: Container in which to execute the command. Defaults to only container if there is only one container in the pod.
    name: container
    in: query
  continue-QfD61s0i:
    uniqueItems: true
    type: string
    description: |-
      The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
  
      This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    name: continue
    in: query
  fieldManager-7c6nTn1T:
    uniqueItems: true
    type: string
    description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).
    name: fieldManager
    in: query
  fieldManager-Qy4HdaTW:
    uniqueItems: true
    type: string
    description: fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    name: fieldManager
    in: query
  fieldSelector-xIcQKXFG:
    uniqueItems: true
    type: string
    description: A selector to restrict the list of returned objects by their fields. Defaults to everything.
    name: fieldSelector
    in: query
  follow-9OIXh_2R:
    uniqueItems: true
    type: boolean
    description: Follow the log stream of the pod. Defaults to false.
    name: follow
    in: query
  force-tOGGb0Yi:
    uniqueItems: true
    type: boolean
    description: Force is going to "force" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.
    name: force
    in: query
  gracePeriodSeconds--K5HaBOS:
    uniqueItems: true
    type: integer
    description: The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    name: gracePeriodSeconds
    in: query
  ignoreStoreReadErrorWithClusterBreakingPotential-QbNkfIqj:
    uniqueItems: true
    type: boolean
    description: 'if set to true, it will trigger an unsafe deletion of the resource in case the normal deletion flow fails with a corrupt object error. A resource is considered corrupt if it can not be retrieved from the underlying storage successfully because of a) its data can not be transformed e.g. decryption failure, or b) it fails to decode into an object. NOTE: unsafe deletion ignores finalizer constraints, skips precondition checks, and removes the object from the storage. WARNING: This may potentially break the cluster if the workload associated with the resource being unsafe-deleted relies on normal deletion flow. Use only if you REALLY know what you are doing. The default value is false, and the user must opt in to enable it'
    name: ignoreStoreReadErrorWithClusterBreakingPotential
    in: query
  insecureSkipTLSVerifyBackend-gM00jVbe:
    uniqueItems: true
    type: boolean
    description: insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the serving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver and the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real kubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the connection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept the actual log data coming from the real kubelet).
    name: insecureSkipTLSVerifyBackend
    in: query
  labelSelector-5Zw57w4C:
    uniqueItems: true
    type: string
    description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
    name: labelSelector
    in: query
  limit-1NfNmdNH:
    uniqueItems: true
    type: integer
    description: |-
      limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
  
      The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    name: limit
    in: query
  limitBytes-zwd1RXuc:
    uniqueItems: true
    type: integer
    description: If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.
    name: limitBytes
    in: query
  namespace-vgWSWtn3:
    uniqueItems: true
    type: string
    description: object name and auth scope, such as for teams and projects
    name: namespace
    in: path
    required: true
  orphanDependents-uRB25kX5:
    uniqueItems: true
    type: boolean
    description: 'Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object''s finalizers list. Either this field or PropagationPolicy may be set, but not both.'
    name: orphanDependents
    in: query
  path-QCf0eosM:
    uniqueItems: true
    type: string
    description: Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy.
    name: path
    in: query
  path-oPbzgLUj:
    uniqueItems: true
    type: string
    description: Path is the URL path to use for the current proxy request to pod.
    name: path
    in: query
  path-rFDtV0x9:
    uniqueItems: true
    type: string
    description: Path is the URL path to use for the current proxy request to node.
    name: path
    in: query
  path-z6Ciiujn:
    uniqueItems: true
    type: string
    description: path to the resource
    name: path
    in: path
    required: true
  ports-91KROJmm:
    uniqueItems: true
    type: integer
    description: List of ports to forward Required when using WebSockets
    name: ports
    in: query
  pretty-tJGM1-ng:
    uniqueItems: true
    type: string
    description: If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
    name: pretty
    in: query
  previous-1jxDPu3y:
    uniqueItems: true
    type: boolean
    description: Return previous terminated container logs. Defaults to false.
    name: previous
    in: query
  propagationPolicy-6jk3prlO:
    uniqueItems: true
    type: string
    description: 'Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: ''Orphan'' - orphan the dependents; ''Background'' - allow the garbage collector to delete the dependents in the background; ''Foreground'' - a cascading policy that deletes all dependents in the foreground.'
    name: propagationPolicy
    in: query
  resourceVersion-5WAnf1kx:
    uniqueItems: true
    type: string
    description: |-
      resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
  
      Defaults to unset
    name: resourceVersion
    in: query
  resourceVersionMatch-t8XhRHeC:
    uniqueItems: true
    type: string
    description: |-
      resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.
  
      Defaults to unset
    name: resourceVersionMatch
    in: query
  sendInitialEvents-rLXlEK_k:
    uniqueItems: true
    type: boolean
    description: |-
      `sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic "Bookmark" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `"k8s.io/initial-events-end": "true"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.
  
      When `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan
        is interpreted as "data at least as new as the provided `resourceVersion`"
        and the bookmark event is send when the state is synced
        to a `resourceVersion` at least as fresh as the one provided by the ListOptions.
        If `resourceVersion` is unset, this is interpreted as "consistent read" and the
        bookmark event is send when the state is synced at least to the moment
        when request started being processed.
      - `resourceVersionMatch` set to any other value or unset
        Invalid error is returned.
  
      Defaults to true if `resourceVersion=""` or `resourceVersion="0"` (for backward compatibility reasons) and to false otherwise.
    name: sendInitialEvents
    in: query
  sinceSeconds-vE2NLdnP:
    uniqueItems: true
    type: integer
    description: A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.
    name: sinceSeconds
    in: query
  stderr-26jJhFUR:
    uniqueItems: true
    type: boolean
    description: Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true.
    name: stderr
    in: query
  stderr-W_1TNlWc:
    uniqueItems: true
    type: boolean
    description: Redirect the standard error stream of the pod for this call.
    name: stderr
    in: query
  stdin-PSzNhyUC:
    uniqueItems: true
    type: boolean
    description: Redirect the standard input stream of the pod for this call. Defaults to false.
    name: stdin
    in: query
  stdin-sEFnN3IS:
    uniqueItems: true
    type: boolean
    description: Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false.
    name: stdin
    in: query
  stdout--EZLRwV1:
    uniqueItems: true
    type: boolean
    description: Redirect the standard output stream of the pod for this call.
    name: stdout
    in: query
  stdout-005YMKE6:
    uniqueItems: true
    type: boolean
    description: Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true.
    name: stdout
    in: query
  stream-l-48cgXv:
    uniqueItems: true
    type: string
    description: Specify which container log stream to return to the client. Acceptable values are "All", "Stdout" and "Stderr". If not specified, "All" is used, and both stdout and stderr are returned interleaved. Note that when "TailLines" is specified, "Stream" can only be set to nil or "All".
    name: stream
    in: query
  tailLines-9xQLWHMV:
    uniqueItems: true
    type: integer
    description: If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime. Note that when "TailLines" is specified, "Stream" can only be set to nil or "All".
    name: tailLines
    in: query
  timeoutSeconds-yvYezaOC:
    uniqueItems: true
    type: integer
    description: Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    name: timeoutSeconds
    in: query
  timestamps-c17fW1w_:
    uniqueItems: true
    type: boolean
    description: If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.
    name: timestamps
    in: query
  tty-g7MlET_l:
    uniqueItems: true
    type: boolean
    description: TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false.
    name: tty
    in: query
  tty-s0flW37O:
    uniqueItems: true
    type: boolean
    description: TTY if true indicates that a tty will be allocated for the exec call. Defaults to false.
    name: tty
    in: query
  watch-XNNPZGbK:
    uniqueItems: true
    type: boolean
    description: Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    name: watch
    in: query
securityDefinitions:
  BearerToken:
    description: Bearer Token authentication
    type: apiKey
    name: authorization
    in: header
security:
  - BearerToken: []
