/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Condition contains details for one aspect of the current state of this API Resource.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1Condition
 */
export interface IoK8sApimachineryPkgApisMetaV1Condition {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    lastTransitionTime: Date;
    /**
     * message is a human readable message indicating details about the transition. This may be an empty string.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    message: string;
    /**
     * observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
     * @type {number}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    observedGeneration?: number;
    /**
     * reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    reason: string;
    /**
     * status of the condition, one of True, False, Unknown.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    status: string;
    /**
     * type of condition in CamelCase or in foo.example.com/CamelCase.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1Condition
     */
    type: string;
}

/**
 * Check if a given object implements the IoK8sApimachineryPkgApisMetaV1Condition interface.
 */
export function instanceOfIoK8sApimachineryPkgApisMetaV1Condition(value: object): value is IoK8sApimachineryPkgApisMetaV1Condition {
    if (!('lastTransitionTime' in value) || value['lastTransitionTime'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function IoK8sApimachineryPkgApisMetaV1ConditionFromJSON(json: any): IoK8sApimachineryPkgApisMetaV1Condition {
    return IoK8sApimachineryPkgApisMetaV1ConditionFromJSONTyped(json, false);
}

export function IoK8sApimachineryPkgApisMetaV1ConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApimachineryPkgApisMetaV1Condition {
    if (json == null) {
        return json;
    }
    return {
        
        'lastTransitionTime': (new Date(json['lastTransitionTime'])),
        'message': json['message'],
        'observedGeneration': json['observedGeneration'] == null ? undefined : json['observedGeneration'],
        'reason': json['reason'],
        'status': json['status'],
        'type': json['type'],
    };
}

export function IoK8sApimachineryPkgApisMetaV1ConditionToJSON(value?: IoK8sApimachineryPkgApisMetaV1Condition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'lastTransitionTime': ((value['lastTransitionTime']).toISOString()),
        'message': value['message'],
        'observedGeneration': value['observedGeneration'],
        'reason': value['reason'],
        'status': value['status'],
        'type': value['type'],
    };
}

