/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * FieldSelectorRequirement is a selector that contains values, a key, and an operator that relates the key and values.
 * @export
 * @interface IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement
 */
export interface IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement {
    /**
     * key is the field selector key that the requirement applies to.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement
     */
    key: string;
    /**
     * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. The list of operators may grow in the future.
     * @type {string}
     * @memberof IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement
     */
    operator: string;
    /**
     * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
     * @type {Array<string>}
     * @memberof IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement
     */
    values?: Array<string>;
}

/**
 * Check if a given object implements the IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement interface.
 */
export function instanceOfIoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement(value: object): value is IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('operator' in value) || value['operator'] === undefined) return false;
    return true;
}

export function IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirementFromJSON(json: any): IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement {
    return IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirementFromJSONTyped(json, false);
}

export function IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirementFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'operator': json['operator'],
        'values': json['values'] == null ? undefined : json['values'],
    };
}

export function IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirementToJSON(value?: IoK8sApimachineryPkgApisMetaV1FieldSelectorRequirement | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'key': value['key'],
        'operator': value['operator'],
        'values': value['values'],
    };
}

