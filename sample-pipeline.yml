# Yennefer pipeline yaml
# Pipeline/Run: 
# - Create/Update: Initializing|Running|Completed
# - Delete: Stopping|Deleting|Deleted
# Task/Job: pipeline의 하위에 존재한다.
# - Create: Initializing|Waiting|Running|Completed
# - Update/Delete: Initializing|Waiting|Running|Completed 새로운 pipeline을 통해 run을 만드는 개념

apiVersion: pipeline.1eedaegon.github.io/v1
kind: Pipeline
metadata:
  namespace: sample
  # projectName: test-project
  name: pipeline-chain-test
spec:
  schedule: # Schedule의 cron과 runAfter/runBefore가 동시에 걸리면 경고를 띄운다. => after는 하위 시간 무시, before는 상위가 나를 무시
    type: cron
    scheduleDate: "5 * * * * *"
    endDate: "2024-06-30" # "2024-06-30:00:00:00+0900"
    # (입력 받을 때)UTC+9를 기본으로 하며, 플랫폼 위치(리전)을 기준으로 표출하되, 입력하는 시간은 변환되어 저장되어야한다.
  runAfter: []
  runBefore: [] # runBefore를 걸었을 때 tasks/pipeline에 해당 이름이 없으면 경고를 띄운다.
  tasks:
  - name: init-pipeline # 이미 해당 task 이름이 있다면 에러
  - name: load-data
    image: nginx
    command:
    - aws s3
    args:
    - "cp s3://something"
    # Schedule의 cron과 runAfter/runBefore가 동시에 걸리면 경고를 띄운다. => after는 하위 시간 무시, before는 상위가 나를 무시
    # cron일 때 pipeline에 schedule이 걸려있으면 경고를 띄운다.
    schedule:
      type: date
      startAt: "2024-06-30:16:00:00"
      # "2024-06-30:16:00:00+0900"
      # (입력 받을 때)UTC+9를 기본으로 하며, 플랫폼 위치(리전)을 기준으로 표출하되, 입력하는 시간은 변환되어 저장되어야한다.
    runBefore: []
    runAfter:
    - transform-data
    inputs: [] # runBefore와 inputs가 동시에 걸리고 runBefore의 task에 output이 없으면 경고를 띄운다.
    outputs: []
    resource:
      cpu: 1
      memory: 2Mi
      gpu:
        type: nvidia # gpu를 걸고 타입을 걸었을 때 node label에 없으면 경고를 띄운다.
        amount: 2
  - name: transform-data
    image: nginx
    runBefore:
    - load-data
    args:
    - "aws cp s3://something"
    runAfter: []
    inputs: [] # runBefore와 inputs가 동시에 걸리고 runBefore의 task에 output이 없으면 경고를 띄운다.
    outputs: []
    resource:
      cpu: 1
      memory: 2Mi

status: # pipeline의 status, run이 되었을때 
  # name 뒤에 postfix가 붙어야한다.
  state: running
  startDate: 2024-05-13:16:00:00
  finishDate: 2024-05-13:17:00:00
  initializing: 1
  running: 1
  completed: 0
  currentJobs:
  - load-data
  jobs:
  - name: load-data
    state: running
    runAfter: []
    runBefore: []
    startDate: 2024-05-13:16:00:00
    finishDate: 2024-05-13:17:00:00
  - name: transform-data
    state: waiting
    runAfter: []
    runBefore:
    - transform-data
    startDate: 2024-05-13:16:00:00
    finishDate: 2024-05-13:17:00:00
