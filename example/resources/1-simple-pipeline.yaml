# Yennefer pipeline yaml
# Pipeline/Run: 
# - Create/Update: Initializing|Running|Completed
# - Delete: Stopping|Deleting|Deleted
# Task/Job: pipeline의 하위에 존재한다.
# - Create: Initializing|Waiting|Running|Completed
# - Update/Delete: Initializing|Waiting|Running|Completed 새로운 pipeline을 통해 run을 만드는 개념

apiVersion: pipeline.1eedaegon.github.io/v1
kind: Pipeline
metadata:
  name: pipeline-chain-test-1
spec:
  schedule: # Schedule의 cron과 runAfter/runBefore가 동시에 걸리면 경고를 띄운다. 
  volumes:
  - name: yennefer-something # 이미 있으면 생성하지 않고 사용
    capacity: 2G # 최대값  # Requests: 2Gi 최소값, csi드라이버 마다 구현이 달라서 통제가 어려움
    # storage 미정의 혹은 empty string으로 정의시 Default StorageClass 사용
    # storage: standard
    # lifecycle 미정의시 pipeline scope로 동작
    # persistent / pipeline / run (crd 정의 참고)
    # lifecycle: persistent
  resource:
    cpu: 200m
    memory: 100Mi
  inputs:
  - name: yennefer-something/global-share-input # RO
    useIntermediateDirectory: false
  - name: yennefer-something/tasks-share-input # RO
    useIntermediateDirectory: true
  outputs:
  - name: yennefer-something/global-share-output # RO
    useIntermediateDirectory: false
  - name: yennefer-something/tasks-share-output # RO
    useIntermediateDirectory: true
  tasks:
  - name: pipeline-init-pipeline # import task type without image version
    image: amazon/aws-cli
    schedule:
      scheduleDate: 1d
    trigger: false
    args:
    - --version
    - if [ -z "$SAMPLE" ]; then echo "no" else echo $SAMPLE fi
    inputs:
    # runBefore와 inputs가 동시에 걸리고 runBefore의 task에 output이 없으면 경고를 띄운다.
    - name: yennefer-something/input # RO
      useIntermediateDirectory: true
    outputs:
    - name: yennefer-something/init-output # RWX
      useIntermediateDirectory: true
    # Below are optional fields, So You could safely omit without specifying null.
    additionalContainerSpecs:
      name: ""
      ports:
      - name: test-port-2
        containerPort: 443
        protocol: TCP
    additionalPodSpecs: null
  additionalContainerSpecs:
    name: ""
    ports:
    - name: test-port
      containerPort: 80
      protocol: TCP
  additionalPodSpecs:
    containers: []
    imagePullSecrets:
    - name: regcred
