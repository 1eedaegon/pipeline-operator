swagger: "2.0"
info:
  title: Kubernetes
  version: v1.30.0
paths:
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines:
    get:
      description: list objects of kind Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.PipelineList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    post:
      description: create a Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    delete:
      description: delete collection of Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedPipeline
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines/{name}:
    get:
      description: read the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    put:
      description: replace the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    delete:
      description: delete a Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    patch:
      description: partially update the specified Pipeline
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedPipeline
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Pipeline
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/pipelines/{name}/status:
    get:
      description: read status of the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    put:
      description: replace status of the specified Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    patch:
      description: partially update status of the specified Pipeline
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedPipelineStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Pipeline
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs:
    get:
      description: list objects of kind Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.RunList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    post:
      description: create a Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    delete:
      description: delete collection of Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedRun
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs/{name}:
    get:
      description: read the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    put:
      description: replace the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    delete:
      description: delete a Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    patch:
      description: partially update the specified Run
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedRun
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Run
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/runs/{name}/status:
    get:
      description: read status of the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    put:
      description: replace status of the specified Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    patch:
      description: partially update status of the specified Run
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedRunStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Run
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks:
    get:
      description: list objects of kind Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.TaskList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    post:
      description: create a Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: createPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: post
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    delete:
      description: delete collection of Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1CollectionNamespacedTask
      parameters:
        - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
        - $ref: '#/parameters/continue-QfD61s0i'
        - $ref: '#/parameters/fieldSelector-xIcQKXFG'
        - $ref: '#/parameters/labelSelector-5Zw57w4C'
        - $ref: '#/parameters/limit-1NfNmdNH'
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
        - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
        - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
        - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
        - $ref: '#/parameters/watch-XNNPZGbK'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: deletecollection
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks/{name}:
    get:
      description: read the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    put:
      description: replace the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    delete:
      description: delete a Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: deletePipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/body-2Y1dVQaQ'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/gracePeriodSeconds--K5HaBOS'
        - $ref: '#/parameters/orphanDependents-uRB25kX5'
        - $ref: '#/parameters/propagationPolicy-6jk3prlO'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status'
        "401":
          description: Unauthorized
      x-kubernetes-action: delete
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    patch:
      description: partially update the specified Task
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedTask
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Task
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/namespaces/{namespace}/tasks/{name}/status:
    get:
      description: read status of the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: readPipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: get
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    put:
      description: replace status of the specified Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: replacePipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-Qy4HdaTW'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: put
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    patch:
      description: partially update status of the specified Task
      consumes:
        - application/json-patch+json
        - application/merge-patch+json
        - application/apply-patch+yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: patchPipeline1eedaegonGithubIoV1NamespacedTaskStatus
      parameters:
        - $ref: '#/parameters/body-78PwaGsr'
        - uniqueItems: true
          type: string
          description: 'When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed'
          name: dryRun
          in: query
        - $ref: '#/parameters/fieldManager-7c6nTn1T'
        - uniqueItems: true
          type: string
          description: 'fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.'
          name: fieldValidation
          in: query
        - $ref: '#/parameters/force-tOGGb0Yi'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
        "401":
          description: Unauthorized
      x-kubernetes-action: patch
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - uniqueItems: true
        type: string
        description: name of the Task
        name: name
        in: path
        required: true
      - $ref: '#/parameters/namespace-vgWSWtn3'
      - $ref: '#/parameters/pretty-tJGM1-ng'
  /apis/pipeline.1eedaegon.github.io/v1/pipelines:
    get:
      description: list objects of kind Pipeline
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1PipelineForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.PipelineList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
  /apis/pipeline.1eedaegon.github.io/v1/runs:
    get:
      description: list objects of kind Run
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1RunForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.RunList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
  /apis/pipeline.1eedaegon.github.io/v1/tasks:
    get:
      description: list objects of kind Task
      consumes:
        - application/json
        - application/yaml
      produces:
        - application/json
        - application/yaml
      schemes:
        - https
      tags:
        - pipeline1eedaegonGithubIo_v1
      operationId: listPipeline1eedaegonGithubIoV1TaskForAllNamespaces
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.TaskList'
        "401":
          description: Unauthorized
      x-kubernetes-action: list
      x-kubernetes-group-version-kind:
        group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
    parameters:
      - $ref: '#/parameters/allowWatchBookmarks-HC2hJt-J'
      - $ref: '#/parameters/continue-QfD61s0i'
      - $ref: '#/parameters/fieldSelector-xIcQKXFG'
      - $ref: '#/parameters/labelSelector-5Zw57w4C'
      - $ref: '#/parameters/limit-1NfNmdNH'
      - $ref: '#/parameters/pretty-tJGM1-ng'
      - $ref: '#/parameters/resourceVersion-5WAnf1kx'
      - $ref: '#/parameters/resourceVersionMatch-t8XhRHeC'
      - $ref: '#/parameters/sendInitialEvents-rLXlEK_k'
      - $ref: '#/parameters/timeoutSeconds-yvYezaOC'
      - $ref: '#/parameters/watch-XNNPZGbK'
definitions:
  io.github.1eedaegon.pipeline.v1.Pipeline:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          env:
            type: object
            additionalProperties:
              type: string
          historyLimit:
            type: object
            properties:
              amount:
                type: integer
              date:
                type: string
          inputs:
            type: array
            items:
              type: string
          outputs:
            type: array
            items:
              type: string
          resource:
            type: object
            properties:
              cpu:
                type: string
              gpu:
                type: object
                properties:
                  amount:
                    type: integer
                  type:
                    type: string
              memory:
                type: string
          runBefore:
            type: array
            items:
              type: string
          schedule:
            type: object
            properties:
              endDate:
                type: string
              scheduleDate:
                type: string
          tasks:
            type: array
            items:
              type: object
              properties:
                args:
                  type: array
                  items:
                    type: string
                command:
                  type: string
                env:
                  type: object
                  additionalProperties:
                    type: string
                image:
                  type: string
                inputs:
                  type: array
                  items:
                    type: string
                name:
                  type: string
                outputs:
                  type: array
                  items:
                    type: string
                resource:
                  type: object
                  properties:
                    cpu:
                      type: string
                    gpu:
                      type: object
                      properties:
                        amount:
                          type: integer
                        type:
                          type: string
                    memory:
                      type: string
                runBefore:
                  type: array
                  items:
                    type: string
                schedule:
                  type: object
                  properties:
                    endDate:
                      type: string
                    scheduleDate:
                      type: string
                trigger:
                  type: boolean
          trigger:
            type: boolean
          volumes:
            type: array
            items:
              type: object
              properties:
                capacity:
                  type: string
                name:
                  type: string
                storage:
                  type: string
      status:
        type: object
        properties:
          createdDate:
            type: string
            format: date-time
          lastUpdatedDate:
            type: string
            format: date-time
          runs:
            type: integer
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Pipeline
        version: v1
  io.github.1eedaegon.pipeline.v1.PipelineList:
    description: PipelineList is a list of Pipeline
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of pipelines. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Pipeline'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: PipelineList
        version: v1
  io.github.1eedaegon.pipeline.v1.Run:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          env:
            type: object
            additionalProperties:
              type: string
          historyLimit:
            type: object
            properties:
              amount:
                type: integer
              date:
                type: string
          inputs:
            type: array
            items:
              type: string
          jobs:
            type: array
            items:
              type: object
              properties:
                args:
                  type: array
                  items:
                    type: string
                command:
                  type: string
                env:
                  type: object
                  additionalProperties:
                    type: string
                image:
                  type: string
                inputs:
                  type: array
                  items:
                    type: string
                name:
                  type: string
                namespace:
                  type: string
                outputs:
                  type: array
                  items:
                    type: string
                resource:
                  type: object
                  properties:
                    cpu:
                      type: string
                    gpu:
                      type: object
                      properties:
                        amount:
                          type: integer
                        type:
                          type: string
                    memory:
                      type: string
                runBefore:
                  type: array
                  items:
                    type: string
                schedule:
                  type: object
                  properties:
                    endDate:
                      type: string
                    scheduleDate:
                      type: string
                trigger:
                  type: string
          outputs:
            type: array
            items:
              type: string
          resource:
            type: object
            properties:
              cpu:
                type: string
              gpu:
                type: object
                properties:
                  amount:
                    type: integer
                  type:
                    type: string
              memory:
                type: string
          runBefore:
            type: array
            items:
              type: string
          schedule:
            type: object
            properties:
              endDate:
                type: string
              scheduleDate:
                type: string
          trigger:
            type: string
          volumes:
            type: array
            items:
              type: object
              properties:
                capacity:
                  type: string
                name:
                  type: string
                storage:
                  type: string
      status:
        type: object
        properties:
          JobStates:
            type: array
            items:
              type: object
              properties:
                jobState:
                  type: string
                name:
                  type: string
                reason:
                  type: string
          completed:
            type: integer
          createdDate:
            type: string
            format: date-time
          deleted:
            type: integer
          deleting:
            type: integer
          failed:
            type: integer
          initializing:
            type: integer
          lastUpdateDate:
            type: string
            format: date-time
          runState:
            type: string
          running:
            type: integer
          stopping:
            type: integer
          waiting:
            type: integer
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Run
        version: v1
  io.github.1eedaegon.pipeline.v1.RunList:
    description: RunList is a list of Run
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of runs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Run'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: RunList
        version: v1
  io.github.1eedaegon.pipeline.v1.Task:
    type: object
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      spec:
        type: object
        properties:
          args:
            type: array
            items:
              type: string
          command:
            type: string
          image:
            type: string
          name:
            type: string
      status:
        type: object
        properties:
          createdDate:
            type: string
            format: date-time
          jobs:
            type: integer
          lastUpdatedDate:
            type: string
            format: date-time
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: Task
        version: v1
  io.github.1eedaegon.pipeline.v1.TaskList:
    description: TaskList is a list of Task
    type: object
    required:
      - items
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      items:
        description: 'List of tasks. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md'
        type: array
        items:
          $ref: '#/definitions/io.github.1eedaegon.pipeline.v1.Task'
      kind:
        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta'
    x-kubernetes-group-version-kind:
      - group: pipeline.1eedaegon.github.io
        kind: TaskList
        version: v1
securityDefinitions:
  BearerToken:
    description: Bearer Token authentication
    type: apiKey
    name: authorization
    in: header
security:
  - BearerToken: []
